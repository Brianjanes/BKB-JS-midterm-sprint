<%- include('./head', { title: title || 'Movie Gallery' }) %>
<header id="header">
  <div class="header-img-top"></div>
  <div class="link-div">
    <div class="genre-dropdown">
      <span>Select a Genre: </span>
      <div class="custom-select">
        <div class="select-trigger">Select a genre</div>
        <div class="options-container">
          <% Object.values(Genres).forEach(genre => { %>
            <a href="/genres/<%= genre %>" class="option"><%= genre %></a>
          <% }) %>
        </div>
      </div>
    </div>
  
    <div class="links">
      <a href="/">Home</a>
      <a href="/top-rated-movies">Top Rated Movies</a>
      <a href="/random">Random Movie</a>
      <a href="/upcoming">Upcoming Movies</a>
    </div>
    <button id="dark-mode-toggle" class="toggle-button">Dark Mode</button>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function() {
  const header = document.getElementById('header');
  const headerImgTop = header.querySelector('.header-img-top');
  const collapseThreshold = 100; // Adjust as needed to trigger collapse
  const reappearThreshold = 50; // Distance from top to re-show the banner

  window.addEventListener('scroll', function() {
    const scrollPosition = window.pageYOffset;

    // Hide header image and fix the header when scrolling past collapseThreshold
    if (scrollPosition > collapseThreshold) {
      header.classList.add('fixed-header');
      headerImgTop.style.display = 'none';
    }

    // Revert to show banner when user scrolls back up near the top
    if (scrollPosition < reappearThreshold) {
      header.classList.remove('fixed-header');
      headerImgTop.style.display = 'block';
    }
  });
});

// Select the toggle button
const darkModeToggle = document.getElementById('dark-mode-toggle');

// Check if dark mode was previously enabled and set initial states
if (localStorage.getItem('theme') === 'dark') {
    document.documentElement.setAttribute('data-theme', 'dark');
    darkModeToggle.innerText = "Light Mode";  // Set initial button text
} else {
    darkModeToggle.innerText = "Dark Mode";   // Set initial button text
}

// Toggle the dark mode
darkModeToggle.addEventListener('click', () => {
    // Check current theme
    const isDark = document.documentElement.getAttribute('data-theme') === 'dark';

    if (isDark) {
        // Switch to light mode
        document.documentElement.removeAttribute('data-theme');
        localStorage.setItem('theme', 'light');
        darkModeToggle.innerText = "Dark Mode";
    } else {
        // Switch to dark mode
        document.documentElement.setAttribute('data-theme', 'dark');
        localStorage.setItem('theme', 'dark');
        darkModeToggle.innerText = "Light Mode";
    }
});

</script>